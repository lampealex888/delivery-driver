[gd_scene load_steps=16 format=3 uid="uid://3jgkal0fqhjl"]

[ext_resource type="MeshLibrary" uid="uid://73f8410mu5x4" path="res://stages/tileset/ground/ground2.tres" id="1_cv7g7"]
[ext_resource type="Script" uid="uid://cmme8veleh46d" path="res://stages/tileset/ground/ground_grip_map.gd" id="2_ps7wv"]
[ext_resource type="MeshLibrary" uid="uid://egbhpp8kqc3e" path="res://stages/tileset/buildings/buildings4.tres" id="3_c4yo7"]
[ext_resource type="PackedScene" uid="uid://c1uai3rvx8hul" path="res://entities/vehicles/player_car/player_car.tscn" id="5_t76my"]
[ext_resource type="PackedScene" uid="uid://b7kylyapef54f" path="res://stages/nature/water.tscn" id="6_laa5p"]
[ext_resource type="PackedScene" uid="uid://cu3e7y753xu8k" path="res://utilities/game/game_manager.tscn" id="6_mill0"]
[ext_resource type="PackedScene" uid="uid://begjm5as3ks3q" path="res://assets/kenney_nature-kit/platform_grass.glb" id="7_ek4ud"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_04bqp"]
sky_top_color = Color(0.411765, 0.556863, 0.835294, 1)
sky_horizon_color = Color(0.780392, 0.85098, 0.937255, 1)
sky_energy_multiplier = 0.05
ground_bottom_color = Color(0.639216, 0.823529, 0.478431, 1)
ground_horizon_color = Color(0.764706, 0.85098, 0.74902, 1)
ground_energy_multiplier = 0.05

[sub_resource type="Sky" id="Sky_dc1wy"]
sky_material = SubResource("ProceduralSkyMaterial_04bqp")

[sub_resource type="Environment" id="Environment_jrmcm"]
background_mode = 2
background_energy_multiplier = 3.0
sky = SubResource("Sky_dc1wy")
glow_enabled = true
glow_blend_mode = 1
glow_hdr_threshold = 0.1

[sub_resource type="Shader" id="Shader_wkn7o"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_refraction : filter_linear_mipmap, repeat_enable;
uniform float refraction : hint_range(-1.0, 1.0, 0.001);
uniform vec4 refraction_texture_channel;
uniform sampler2D screen_texture : hint_screen_texture, repeat_disable, filter_linear_mipmap;
uniform sampler2D depth_texture : hint_depth_texture, repeat_disable, filter_nearest;

uniform sampler2D texture_normal : hint_roughness_normal, filter_linear_mipmap, repeat_enable;
uniform float normal_scale : hint_range(-16.0, 16.0);
varying vec3 uv1_triplanar_pos;

uniform float uv1_blend_sharpness : hint_range(0.0, 150.0, 0.001);
varying vec3 uv1_power_normal;

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	vec3 normal = NORMAL;

	TANGENT = vec3(0.0, 0.0, -1.0) * abs(normal.x);
	TANGENT += vec3(1.0, 0.0, 0.0) * abs(normal.y);
	TANGENT += vec3(1.0, 0.0, 0.0) * abs(normal.z);
	TANGENT = normalize(TANGENT);

	BINORMAL = vec3(0.0, 1.0, 0.0) * abs(normal.x);
	BINORMAL += vec3(0.0, 0.0, -1.0) * abs(normal.y);
	BINORMAL += vec3(0.0, 1.0, 0.0) * abs(normal.z);
	BINORMAL = normalize(BINORMAL);

	// UV1 Triplanar: Enabled
	uv1_power_normal = pow(abs(NORMAL), vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset + TIME * 0.01;
	uv1_power_normal /= dot(uv1_power_normal, vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0, -1.0, 1.0);
}

vec4 triplanar_texture(sampler2D p_sampler, vec3 p_weights, vec3 p_triplanar_pos) {
	vec4 samp = vec4(0.0);
	samp += texture(p_sampler, p_triplanar_pos.xy) * p_weights.z;
	samp += texture(p_sampler, p_triplanar_pos.xz) * p_weights.y;
	samp += texture(p_sampler, p_triplanar_pos.zy * vec2(-1.0, 1.0)) * p_weights.x;
	return samp;
}

void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo, uv1_power_normal, uv1_triplanar_pos);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(triplanar_texture(texture_metallic, uv1_power_normal, uv1_triplanar_pos), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness, uv1_power_normal, uv1_triplanar_pos), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;

	// Normal Map: Enabled
	NORMAL_MAP = triplanar_texture(texture_normal, uv1_power_normal, uv1_triplanar_pos).rgb;
	NORMAL_MAP_DEPTH = normal_scale;

	// Refraction: Enabled (with normal map texture)
	vec3 unpacked_normal = NORMAL_MAP;
	unpacked_normal.xy = unpacked_normal.xy * 2.0 - 1.0;
	unpacked_normal.z = sqrt(max(0.0, 1.0 - dot(unpacked_normal.xy, unpacked_normal.xy)));
	vec3 ref_normal = normalize(mix(
			NORMAL,
			TANGENT * unpacked_normal.x + BINORMAL * unpacked_normal.y + NORMAL * unpacked_normal.z,
			NORMAL_MAP_DEPTH));
	vec2 ref_ofs = SCREEN_UV - ref_normal.xy * dot(triplanar_texture(texture_refraction, uv1_power_normal, uv1_triplanar_pos), refraction_texture_channel) * refraction;

	float ref_amount = 1.0 - albedo.a * albedo_tex.a;

	float refraction_depth_tex = textureLod(depth_texture, ref_ofs, 0.0).r;
	vec4 refraction_view_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, refraction_depth_tex, 1.0);
	refraction_view_pos.xyz /= refraction_view_pos.w;

	// If the depth buffer is lower then the model's Z position, use the refracted UV, otherwise use the normal screen UV.
	// At low depth differences, decrease refraction intensity to avoid sudden discontinuities.
	EMISSION += textureLod(screen_texture, mix(SCREEN_UV, ref_ofs, smoothstep(0.0, 1.0, VERTEX.z - refraction_view_pos.z)), ROUGHNESS * 8.0).rgb * ref_amount * EXPOSURE;
	ALBEDO *= 1.0 - ref_amount;
	// Force transparency on the material (required for refraction).
	ALPHA = 1.0;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_qv5vb"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_1e33k"]
seamless = true
as_normal_map = true
noise = SubResource("FastNoiseLite_qv5vb")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_6a06v"]
render_priority = 0
shader = SubResource("Shader_wkn7o")
shader_parameter/albedo = Color(0.0588235, 0.368627, 0.611765, 0.478431)
shader_parameter/albedo_texture_size = Vector2i(0, 0)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/texture_refraction = SubResource("NoiseTexture2D_1e33k")
shader_parameter/refraction = 0.05
shader_parameter/refraction_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/texture_normal = SubResource("NoiseTexture2D_1e33k")
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_blend_sharpness = 1.0
shader_parameter/uv1_scale = Vector3(0.04, 0.04, 0.04)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="BoxMesh" id="BoxMesh_ek4ud"]
material = SubResource("ShaderMaterial_6a06v")
size = Vector3(400, 1, 300)

[node name="City" type="Node3D"]

[node name="RoadGridMap" type="GridMap" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.13, 0)
mesh_library = ExtResource("1_cv7g7")
cell_size = Vector3(6.66, 6.66, 6.66)
cell_center_y = false
cell_scale = 6.66
data = {
"cells": PackedInt32Array(65515, 65527, 1048583, 65516, 65528, 6, 65516, 65529, 1441799, 65516, 65530, 1441799, 65516, 65531, 655361, 65517, 65528, 7, 65517, 65531, 6, 65517, 65534, 1048582, 65517, 2, 1048582, 65517, 3, 1441799, 65517, 4, 1441799, 65517, 5, 1048582, 65517, 6, 1048583, 65517, 7, 1441799, 65518, 65528, 7, 65518, 65531, 655367, 65518, 65534, 655367, 65518, 65535, 1048584, 65518, 0, 1048584, 65518, 1, 1048584, 65518, 2, 7, 65518, 7, 655369, 65519, 65525, 1441798, 65519, 65526, 1048583, 65519, 65527, 1048582, 65519, 65528, 1441798, 65519, 65529, 1441799, 65519, 65530, 1441799, 65519, 65531, 655366, 65519, 65534, 7, 65519, 2, 7, 65519, 7, 1048584, 65519, 8, 1048584, 65520, 65527, 7, 65520, 65531, 6, 65520, 65534, 1441798, 65520, 2, 1441798, 65520, 3, 1048582, 65520, 4, 1048583, 65520, 5, 1441798, 65521, 65527, 7, 65521, 65531, 7, 65521, 65532, 1048584, 65521, 65533, 1048584, 65521, 2, 1048584, 65521, 5, 1048584, 65521, 9, 655365, 65522, 65527, 7, 65522, 65531, 655367, 65522, 65535, 7, 65522, 0, 1048584, 65522, 1, 1048584, 65522, 2, 1048584, 65522, 5, 1048584, 65522, 9, 1048584, 65523, 65523, 1048583, 65523, 65524, 1048583, 65523, 65525, 1048583, 65523, 65526, 1048583, 65523, 65527, 1441795, 65523, 65528, 1048583, 65523, 65529, 1048583, 65523, 65530, 1048583, 65523, 65531, 655366, 65523, 1, 1048584, 65523, 2, 1048584, 65523, 3, 7, 65523, 4, 1048584, 65523, 5, 1048584, 65523, 6, 1048584, 65523, 7, 7, 65523, 8, 1048584, 65523, 9, 1048584, 65523, 10, 1048584, 65524, 65522, 655366, 65524, 65527, 655367, 65524, 65531, 6, 65524, 1, 1048583, 65524, 5, 1441799, 65524, 10, 1048583, 65525, 65522, 655367, 65525, 65527, 655367, 65525, 65531, 7, 65525, 65532, 655368, 65525, 65533, 655368, 65525, 65535, 7, 65525, 0, 1048584, 65525, 1, 1048584, 65525, 2, 1048584, 65525, 5, 1048584, 65525, 10, 1048584, 65526, 65522, 655367, 65526, 65527, 655367, 65526, 65531, 655367, 65526, 1, 655368, 65526, 5, 1048584, 65526, 10, 1048584, 65527, 65527, 6, 65527, 65528, 1048583, 65527, 65529, 1048583, 65527, 65530, 1048583, 65527, 65531, 655366, 65527, 1, 1048584, 65527, 5, 1048584, 65528, 65524, 1441799, 65528, 65525, 1441799, 65528, 65526, 1441799, 65528, 65527, 655366, 65528, 65531, 6, 65528, 65532, 1048583, 65528, 65533, 1048583, 65528, 65535, 655363, 65528, 0, 1441799, 65528, 1, 1441799, 65528, 2, 1441799, 65528, 3, 655366, 65528, 4, 1048584, 65528, 5, 1048584, 65528, 6, 1048584, 65528, 7, 7, 65528, 8, 1048584, 65528, 9, 1048584, 65529, 65527, 7, 65529, 65531, 655367, 65529, 65534, 655368, 65529, 2, 1441800, 65529, 6, 1048583, 65530, 65527, 7, 65530, 65531, 655367, 65530, 65534, 655368, 65530, 2, 1441800, 65530, 6, 1048584, 65531, 65527, 6, 65531, 65528, 1048583, 65531, 65529, 1048583, 65531, 65530, 1048582, 65531, 65531, 1441798, 65531, 65532, 1048583, 65531, 65533, 1048583, 65531, 65534, 1048582, 65531, 65535, 1441798, 65531, 0, 1441799, 65531, 1, 1441799, 65531, 2, 1441799, 65531, 6, 1048584, 65532, 65525, 1441799, 65532, 65526, 1441799, 65532, 65527, 655366, 65532, 65530, 655367, 65532, 65534, 7, 65532, 2, 1048585, 65532, 3, 655367, 65532, 4, 1048584, 65532, 5, 1048584, 65532, 6, 1048584, 65532, 7, 1048584, 65533, 65527, 655367, 65533, 65530, 655367, 65533, 65534, 655366, 65533, 2, 1048585, 65533, 5, 1048584, 65534, 65527, 655367, 65534, 65530, 655367, 65534, 65534, 7, 65534, 2, 1048585, 65534, 5, 1048584, 65535, 65524, 1441798, 65535, 65525, 1441799, 65535, 65526, 1048583, 65535, 65527, 1441798, 65535, 65528, 1048582, 65535, 65529, 1441799, 65535, 65530, 1441798, 65535, 65531, 1048583, 65535, 65532, 1048582, 65535, 65533, 1441799, 65535, 65534, 1441798, 65535, 65535, 1441799, 65535, 0, 1048582, 65535, 1, 1048583, 65535, 2, 1441799, 65535, 3, 1441798, 65535, 4, 1048582, 65535, 5, 1048583, 65535, 6, 1441798, 17, 0, 655367, 16, 3, 655366, 16, 2, 1441799, 16, 1, 1441799, 16, 0, 1048579, 16, 65535, 1048583, 16, 65534, 1048583, 16, 65533, 1048583, 16, 65532, 6, 16, 65527, 7, 15, 3, 6, 15, 0, 655367, 15, 65532, 655367, 15, 65527, 655361, 15, 65526, 1048583, 15, 65525, 1441798, 14, 3, 7, 14, 0, 655367, 14, 65532, 655366, 14, 65531, 1048583, 14, 65530, 1048583, 14, 65529, 1, 14, 65525, 7, 13, 3, 655366, 13, 2, 1048583, 13, 1, 1048583, 13, 0, 6, 13, 65532, 655367, 13, 65529, 7, 13, 65525, 7, 12, 3, 7, 12, 0, 655366, 12, 65535, 1048583, 12, 65534, 1048583, 12, 65533, 1441798, 12, 65532, 1048577, 12, 65529, 7, 12, 65525, 7, 11, 6, 1441799, 11, 5, 1441799, 11, 4, 1441799, 11, 3, 6, 11, 0, 655367, 11, 65533, 655366, 11, 65532, 1048583, 11, 65531, 1048583, 11, 65530, 1048583, 11, 65529, 1048579, 11, 65528, 1048583, 11, 65527, 1048583, 11, 65526, 1048583, 11, 65525, 1048582, 11, 65524, 1441798, 11, 65523, 1048583, 10, 7, 7, 10, 3, 7, 10, 0, 655367, 10, 65533, 655367, 10, 65529, 655367, 10, 65524, 7, 9, 7, 7, 9, 3, 1048579, 9, 2, 1048583, 9, 1, 1441799, 9, 0, 655363, 9, 65535, 1048583, 9, 65534, 1048583, 9, 65533, 1048579, 9, 65532, 1441797, 9, 65529, 655367, 9, 65524, 7, 8, 7, 7, 8, 3, 7, 8, 0, 655367, 8, 65533, 655367, 8, 65529, 655367, 8, 65524, 7, 7, 7, 655366, 7, 6, 1441799, 7, 5, 1441799, 7, 4, 1441799, 7, 3, 6, 7, 0, 655367, 7, 65533, 655367, 7, 65529, 655367, 7, 65524, 7, 6, 9, 1048583, 6, 8, 1048583, 6, 7, 6, 6, 3, 655366, 6, 2, 1441799, 6, 1, 1441799, 6, 0, 1048579, 6, 65535, 1048583, 6, 65534, 1048583, 6, 65533, 1048582, 6, 65532, 1441798, 6, 65531, 1441799, 6, 65530, 1441799, 6, 65529, 1048582, 6, 65528, 1441798, 6, 65527, 1048583, 6, 65526, 1048583, 6, 65525, 1048583, 6, 65524, 1048579, 6, 65523, 1441799, 6, 65522, 1441799, 6, 65521, 1441799, 5, 7, 655367, 5, 3, 7, 5, 0, 7, 5, 65532, 7, 5, 65524, 7, 5, 65520, 655366, 4, 7, 655367, 4, 3, 7, 4, 0, 7, 4, 65532, 655367, 4, 65524, 7, 4, 65520, 655367, 3, 7, 655366, 3, 6, 1441799, 3, 5, 1441799, 3, 4, 1441798, 3, 3, 1048582, 3, 2, 1441799, 3, 1, 1441799, 3, 0, 1048579, 3, 65535, 1048583, 3, 65534, 1048583, 3, 65533, 1048583, 3, 65532, 3, 3, 65524, 7, 2, 7, 6, 2, 4, 7, 2, 0, 655367, 2, 65532, 655367, 2, 65525, 1048583, 2, 65524, 1048582, 2, 65523, 1048583, 2, 65522, 1441798, 1, 4, 7, 1, 0, 655367, 1, 65532, 7, 0, 4, 7, 0, 0, 655367, 0, 65532, 7, 7, 9, 8, 7, 8, 8, 8, 8, 8, 17, 1, 8, 17, 2, 8, 17, 65535, 8, 17, 65534, 8, 17, 65533, 8, 15, 65533, 8, 14, 65533, 8, 13, 65533, 8, 13, 65534, 8, 14, 65534, 8, 15, 65534, 8, 15, 65535, 8, 14, 65535, 8, 13, 65535, 8, 14, 1, 8, 15, 1, 8, 15, 2, 8, 14, 2, 8, 12, 1, 8, 11, 1, 8, 10, 1, 8, 10, 2, 8, 11, 2, 8, 12, 2, 8, 12, 4, 8, 13, 4, 8, 14, 4, 8, 13, 5, 8, 12, 5, 8, 10, 6, 8, 9, 6, 8, 9, 5, 8, 8, 6, 8, 8, 5, 8, 8, 4, 8, 9, 4, 1048581, 10, 4, 8, 10, 5, 8, 8, 2, 8, 8, 1, 8, 7, 1, 8, 7, 2, 8, 5, 2, 8, 5, 1, 8, 4, 2, 8, 4, 1, 8, 4, 4, 1441800, 5, 4, 1441800, 6, 4, 1441800, 6, 5, 1441800, 5, 5, 1441800, 4, 5, 1441800, 4, 6, 1441800, 5, 6, 1441800, 6, 6, 1441800, 5, 8, 8, 4, 8, 8, 2, 6, 8, 1, 6, 8, 0, 6, 8, 0, 5, 8, 1, 5, 8, 2, 5, 8, 2, 3, 8, 1, 3, 8, 0, 3, 8, 0, 2, 8, 1, 1, 1441800, 1, 2, 1441800, 0, 1, 8, 2, 1, 8, 2, 2, 8, 65518, 3, 1441801, 65519, 3, 1441801, 65518, 4, 1441801, 65519, 4, 1441801, 65519, 5, 655367, 65518, 5, 655367, 65518, 6, 1048584, 65519, 6, 655369, 65520, 6, 1048583, 65521, 6, 1048584, 65522, 6, 9, 65521, 7, 7, 65520, 7, 1048582, 65522, 7, 7, 65521, 8, 1048584, 65520, 8, 1048583, 65522, 8, 1048584, 65524, 9, 1048583, 65524, 8, 1048583, 65524, 7, 655363, 65524, 6, 1441799, 65525, 6, 1048584, 65526, 6, 1048584, 65527, 6, 1048584, 65527, 7, 7, 65526, 7, 7, 65525, 7, 7, 65525, 8, 1048584, 65526, 8, 1048584, 65527, 8, 1048584, 65527, 9, 1048584, 65526, 9, 1048584, 65525, 9, 1048584, 65529, 9, 1048583, 65529, 8, 1048582, 65529, 7, 1441798, 65530, 7, 1048584, 65531, 7, 1048584, 65530, 8, 7, 65533, 6, 1048577, 65534, 6, 655367, 65531, 5, 1048584, 65531, 4, 1048581, 65531, 3, 1441795, 65530, 3, 655367, 65529, 3, 6, 65529, 4, 1048583, 65529, 5, 1048583, 65530, 5, 1048584, 65530, 4, 1048584, 65532, 1, 1048585, 65532, 0, 1048585, 65532, 65535, 1048585, 65533, 65535, 1048585, 65534, 65535, 1048585, 65534, 0, 1048585, 65533, 0, 1048585, 65534, 1, 1048585, 65533, 1, 1048585, 65533, 3, 7, 65534, 3, 7, 65534, 4, 1048584, 65533, 4, 1048584, 65530, 1, 1441800, 65530, 0, 1441800, 65530, 65535, 7, 65529, 65535, 7, 65529, 0, 1441800, 65529, 1, 1441800, 65527, 2, 1048584, 65526, 2, 655368, 65526, 3, 655367, 65527, 3, 7, 65527, 4, 1048584, 65526, 4, 1048584, 65525, 4, 1048584, 65525, 3, 7, 65524, 4, 1441799, 65524, 3, 1048579, 65524, 2, 1048583, 65522, 3, 655367, 65521, 3, 655367, 65521, 4, 1048584, 65522, 4, 1048584, 65521, 1, 1048584, 65521, 0, 1048584, 65521, 65535, 655367, 65520, 65535, 1048582, 65519, 65535, 1048584, 65519, 0, 1048584, 65519, 1, 1048584, 65520, 1, 1048583, 65520, 0, 1048583, 65517, 65535, 1441799, 65517, 0, 1048583, 65517, 1, 1441799, 65524, 65535, 3, 65523, 65535, 7, 65523, 0, 1048584, 65524, 0, 1048583, 65527, 65535, 7, 65526, 65535, 655367, 65526, 0, 655368, 65527, 0, 1048584, 65529, 65532, 655368, 65529, 65533, 655368, 65530, 65532, 655368, 65530, 65533, 655368, 65526, 65532, 655368, 65526, 65533, 655368, 65527, 65532, 655368, 65527, 65533, 655368, 65517, 65529, 655368, 65517, 65530, 655368, 65518, 65529, 655368, 65518, 65530, 655368, 10, 65534, 655368, 10, 65535, 655368, 11, 65534, 655368, 11, 65535, 655368, 7, 65534, 1048585, 7, 65535, 1048585, 8, 65534, 1048585, 8, 65535, 1048585, 65532, 65531, 8, 65532, 65532, 8, 65532, 65533, 8, 65533, 65531, 8, 65533, 65532, 8, 65533, 65533, 1441797, 65534, 65531, 8, 65534, 65532, 8, 65534, 65533, 8, 65528, 65528, 8, 65528, 65529, 8, 65528, 65530, 8, 65529, 65528, 8, 65529, 65529, 8, 65529, 65530, 8, 65530, 65528, 8, 65530, 65529, 8, 65530, 65530, 8, 65524, 65528, 8, 65524, 65529, 8, 65524, 65530, 8, 65525, 65528, 8, 65525, 65529, 8, 65525, 65530, 8, 65526, 65528, 8, 65526, 65529, 8, 65526, 65530, 8, 65520, 65528, 8, 65520, 65529, 8, 65520, 65530, 8, 65521, 65528, 8, 65521, 65529, 8, 65521, 65530, 8, 65522, 65528, 8, 65522, 65529, 8, 65522, 65530, 8, 0, 65533, 8, 0, 65534, 8, 0, 65535, 8, 1, 65533, 8, 1, 65534, 8, 1, 65535, 8, 2, 65533, 8, 2, 65534, 8, 2, 65535, 8, 3, 65530, 1048582, 3, 65531, 1048583, 4, 65529, 1048584, 4, 65530, 655365, 4, 65531, 1048584, 5, 65529, 8, 5, 65530, 8, 5, 65531, 8, 3, 65521, 8, 3, 65522, 8, 3, 65523, 8, 4, 65521, 8, 4, 65522, 8, 4, 65523, 8, 5, 65521, 8, 5, 65522, 8, 5, 65523, 8, 3, 65525, 8, 3, 65526, 8, 3, 65527, 8, 4, 65525, 8, 4, 65526, 8, 4, 65527, 8, 5, 65525, 8, 5, 65526, 8, 5, 65527, 8, 12, 65526, 8, 12, 65527, 8, 12, 65528, 8, 13, 65526, 8, 13, 65527, 8, 13, 65528, 8, 14, 65526, 8, 14, 65527, 8, 14, 65528, 8, 12, 65523, 8, 12, 65524, 8, 13, 65524, 8, 14, 65524, 8, 65524, 65523, 8, 65524, 65524, 8, 65524, 65525, 8, 65524, 65526, 8, 65525, 65523, 8, 65525, 65524, 8, 65525, 65525, 8, 65525, 65526, 8, 65526, 65523, 8, 65526, 65524, 8, 65526, 65525, 8, 65526, 65526, 8, 65527, 65523, 8, 65527, 65524, 8, 65527, 65525, 8, 65527, 65526, 8, 7, 65525, 8, 7, 65526, 8, 7, 65527, 8, 7, 65528, 8, 8, 65525, 8, 8, 65526, 8, 8, 65527, 8, 8, 65528, 8, 9, 65525, 8, 9, 65526, 8, 9, 65527, 8, 9, 65528, 8, 10, 65525, 8, 10, 65526, 8, 10, 65527, 8, 10, 65528, 8, 10, 65532, 8, 10, 65531, 8, 10, 65530, 8, 9, 65531, 8, 9, 65530, 8, 8, 65532, 8, 8, 65531, 8, 8, 65530, 8, 65529, 65526, 1048584, 65530, 65526, 1048584, 65531, 65526, 1048584, 65529, 65525, 1048584, 65530, 65525, 1048584, 65531, 65525, 1048584, 65529, 65524, 1048584, 65533, 65525, 655368, 65533, 65526, 655368, 65534, 65525, 655368, 65534, 65526, 655368, 12, 65530, 655368, 12, 65531, 655368, 13, 65530, 655368, 13, 65531, 655368, 65522, 65524, 655368, 65521, 65524, 655368, 65520, 65525, 655368, 65520, 65526, 655368, 65521, 65526, 655368, 65521, 65525, 655368, 65522, 65525, 655368, 65522, 65526, 655368, 65518, 65526, 655368, 65518, 65527, 655368, 65517, 65527, 655368, 65516, 65527, 655368, 65519, 65532, 655368, 65520, 65532, 1048583, 65520, 65533, 1048583, 65519, 65533, 655368, 65522, 65532, 655368, 65523, 65532, 655368, 65524, 65532, 1048583, 65524, 65533, 1048583, 65523, 65533, 655368, 65522, 65533, 655368, 0, 65523, 655368, 1, 65523, 655368, 1, 65524, 655368, 0, 65524, 655368, 0, 65525, 655368, 1, 65525, 655368, 0, 65527, 1441800, 1, 65528, 7, 0, 65528, 7, 65534, 65528, 655368, 65533, 65528, 655368, 65532, 65528, 655368, 65532, 65529, 655368, 65533, 65529, 655368, 65534, 65529, 655368, 0, 65530, 655368, 1, 65530, 655368, 1, 65531, 655368, 0, 65531, 655368, 4, 65533, 655368, 5, 65533, 655368, 5, 65534, 655368, 4, 65534, 655368, 4, 65535, 655368, 5, 65535, 655368, 7, 65522, 655368, 7, 65521, 655368, 8, 65521, 655368, 10, 65522, 655368, 10, 65523, 655368, 9, 65523, 655368, 9, 65522, 655368, 8, 65522, 655368, 8, 65523, 655368, 7, 65523, 655368, 16, 65525, 655368, 16, 65526, 655368, 15, 65528, 655368, 16, 65528, 655368, 16, 65529, 655368, 15, 65529, 655368, 15, 65530, 655368, 16, 65530, 655368, 15, 65531, 655368, 16, 65531, 655368, 65528, 65534, 1441799, 65527, 65534, 655368, 65526, 65534, 655368, 65525, 65534, 655368, 65524, 65534, 1048583, 65523, 65534, 655368, 65522, 65534, 655368, 65521, 65534, 1048584, 2, 65531, 1441800, 2, 65530, 1441800, 2, 65529, 8, 1, 65529, 8, 0, 65529, 8, 3, 65529, 1048583, 4, 65528, 655367, 5, 65528, 7, 3, 65528, 6, 2, 65528, 655366, 2, 65527, 1441799, 2, 65526, 1441799, 1, 65526, 1441800, 0, 65526, 1441800, 1, 65527, 1441800, 7, 65530, 8, 7, 65531, 8, 7, 65532, 8, 65517, 65533, 1441799, 65517, 65532, 1441799, 65518, 65533, 1048584, 65518, 65532, 1048584, 65515, 65528, 655361, 65516, 65532, 1441800, 65516, 65533, 1441800, 65516, 65534, 655367, 65516, 65535, 1441800, 65516, 0, 1441800, 65516, 1, 1441800, 65516, 2, 655367, 65516, 3, 1441800, 65516, 4, 1441800, 65516, 5, 1441800, 65516, 6, 1441800, 65514, 5, 1441800, 65515, 5, 1441800, 65515, 4, 1441800, 65515, 3, 1441800, 65514, 4, 1441800, 65514, 3, 1441800, 65515, 2, 655367, 65515, 1, 1441800, 65515, 0, 1441800, 65515, 65532, 1441800, 65515, 65533, 1441800, 65515, 65534, 655367, 65515, 65535, 1441800, 65514, 65532, 1441799, 65514, 65533, 1441799, 65514, 65534, 655361, 65514, 65535, 1441800, 65514, 0, 1441800, 65514, 1, 1441800, 65514, 2, 655367, 1, 65522, 131080, 65522, 65523, 131080, 65520, 65524, 131080, 65517, 65526, 655368, 65515, 65529, 131080, 65515, 65530, 131080, 65515, 65531, 131080, 65514, 65531, 131080, 65514, 65530, 131080, 65514, 65529, 131080, 65524, 11, 1441798, 65525, 11, 1048584, 65527, 10, 131080, 9, 8, 8)
}
script = ExtResource("2_ps7wv")

[node name="BuildingsGridMap" type="GridMap" parent="."]
mesh_library = ExtResource("3_c4yo7")
cell_size = Vector3(5, 5, 5)
cell_center_y = false
cell_scale = 5.0
collision_mask = 0

[node name="PlayerCar" parent="." instance=ExtResource("5_t76my")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, -156.495, 31.1, 25.38)

[node name="GameManager" parent="." instance=ExtResource("6_mill0")]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_jrmcm")

[node name="WaterMesh" parent="." instance=ExtResource("6_laa5p")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -2.21, 0)
mesh = SubResource("BoxMesh_ek4ud")

[node name="platform_grass2" parent="." instance=ExtResource("7_ek4ud")]
transform = Transform3D(400, 0, 0, 0, 400, 0, 0, 0, 400, -8.8, -13.5, 2.8)
